using System.Globalization;
using System.Text;
using CredChecker;
using LegalEntityChecker;
using ReportProvider;

namespace TelegramBot;

public static class ReportConverter
{
    private static readonly CultureInfo ruCulture = CultureInfo.GetCultureInfo("ru-RU");

    public static StringBuilder ToTelegramMessage(GeneralInfo report)
    {
        var sb = new StringBuilder();
        sb.AppendFormat("<b>{0}</b>", report.Name).AppendLine().AppendLine();

        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        sb.AppendFormat("<b>‚ÑπÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>").AppendLine().AppendLine();
        sb.AppendFormat("–ò–ù–ù: <code>{0}</code>", report.Tin).AppendLine();
        sb.AppendFormat("–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {0:yyyy-MM-dd}", DateTimeOffset.FromUnixTimeSeconds(report.IncorporationDate)).AppendLine();
        sb.AppendFormat(ruCulture, "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: {0:N0} ‚ÇΩ", report.AuthorizedCapital).AppendLine();

        if (report.EmployeesNumber > 0)
        {
            sb.AppendFormat(ruCulture, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {0:N0}", report.EmployeesNumber).AppendLine();
        }
        else
        {
            sb.AppendLine("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
        }

        sb.AppendFormat("üìç <a href=\"https://yandex.com/maps?text={0}\">{1}</a>", report.Address.Replace(' ', '.'), report.Address).AppendLine();

        if (report.AccreditationState == CreditState.Credited)
        {
            sb.AppendLine("‚úÖ –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –ú–∏–Ω—Ü–∏—Ñ—Ä—ã");
        }
        sb.AppendFormat(report.Profit > 0 ? "–ü—Ä–∏–±—ã–ª—å –∑–∞ {0} –≥–æ–¥: {1:N0} ‚ÇΩ" : "‚ö†Ô∏è –£–±—ã—Ç–æ–∫ –∑–∞ {0} –≥–æ–¥: {1:N0} ‚ÇΩ", report.Year, report.Profit).AppendLine();

        // –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è
        if (report.LegalEntityStatus != LegalEntityStatus.Active ||
            report.AccreditationState != CreditState.Credited ||
            report.SalaryDelays)
        {
            sb.AppendLine().AppendFormat("<b>‚ö†Ô∏è –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è</b>").AppendLine().AppendLine();

            if (report.AccreditationState != CreditState.Credited)
            {
                sb.AppendLine("‚ùóÔ∏è–ù–µ—Ç –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –ú–∏–Ω—Ü–∏—Ñ—Ä—ã");
            }

            if (report.LegalEntityStatus == LegalEntityStatus.Bankruptcy)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞");
            }
            else if (report.LegalEntityStatus == LegalEntityStatus.InReorganizationProcess)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏");
            }
            else if (report.LegalEntityStatus == LegalEntityStatus.InTerminationProcess)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏");
            }
            else if (report.LegalEntityStatus == LegalEntityStatus.Terminated)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞");
            }

            if (report.SalaryDelays) sb.AppendLine("‚ùóÔ∏è–ó–∞–¥–µ—Ä–∂–∏–≤–∞—é—Ç –∑–∞—Ä–ø–ª–∞—Ç—É");
        }

        return sb;
    }

    public static StringBuilder ToTelegramMessage(LegalEntityInfo report)
    {
        var sb = new StringBuilder();

        var basicInfo = report.BasicInfo;
        var financeInfo = report.FinanceInfo;
        var proceedingsInfo = report.ProceedingsInfo;

        sb.AppendFormat("<b>{0}</b>", basicInfo.Name).AppendLine().AppendLine();

        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        sb.AppendFormat("<b>‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>").AppendLine().AppendLine();
        sb.AppendFormat("–ò–ù–ù: <code>{0}</code>", basicInfo.Tin).AppendLine();
        sb.AppendFormat("–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {0:yyyy-MM-dd}", DateTimeOffset.FromUnixTimeSeconds(basicInfo.IncorporationDate)).AppendLine();
        sb.AppendFormat(ruCulture, "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: {0:N0} ‚ÇΩ", basicInfo.AuthorizedCapital).AppendLine();

        if (basicInfo.EmployeesNumber > 0)
        {
            sb.AppendFormat(ruCulture, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {0:N0}", basicInfo.EmployeesNumber).AppendLine();
        }
        else
        {
            sb.AppendLine("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
        }

        sb.AppendFormat("–ê–¥—Ä–µ—Å: <a href=\"https://yandex.com/maps?text={0}\">{1}</a>", basicInfo.Address.Replace(' ', '.'), basicInfo.Address).AppendLine();

        var statusString = basicInfo.LegalEntityStatus switch
        {
            LegalEntityStatus.Active => "–î–µ–π—Å—Ç–≤—É—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è",
            LegalEntityStatus.Bankruptcy => "‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞",
            LegalEntityStatus.InReorganizationProcess => "‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
            LegalEntityStatus.InTerminationProcess => "‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏",
            LegalEntityStatus.Terminated => "‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞",
            _ => throw new NotImplementedException(),
        };

        sb.AppendFormat("–°—Ç–∞—Ç—É—Å: {0}", statusString).AppendLine().AppendLine();

        sb.AppendLine("<b>üë§ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å</b>").AppendLine();
        sb.AppendFormat("–î–æ–ª–∂–Ω–æ—Å—Ç—å: {0}", ruCulture.TextInfo.ToTitleCase(basicInfo.Manager.Position.ToLower())).AppendLine();
        sb.AppendFormat("–ò–º—è: {0}", ruCulture.TextInfo.ToTitleCase(basicInfo.Manager.Name.ToLower())).AppendLine();
        sb.AppendFormat("–ò–ù–ù: <code>{0}</code>", basicInfo.Manager.Tin).AppendLine().AppendLine();

        sb.AppendLine("<b>üíº –£—á—Ä–µ–¥–∏—Ç–µ–ª–∏</b>").AppendLine();

        foreach (var shareholder in basicInfo.Shareholders)
        {
            sb.AppendFormat("{0}", shareholder.Name).AppendLine();
            if (shareholder.Tin > 0) sb.AppendFormat("–ò–ù–ù: <code>{0}</code>", shareholder.Tin).AppendLine();
            else sb.AppendFormat("–ò–ù–ù: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–µ —é—Ä–ª–∏—Ü–æ)", shareholder.Tin).AppendLine();
            sb.AppendFormat("–î–æ–ª—è: {0:N0} ‚ÇΩ ({1:N2})", shareholder.Share, shareholder.Size).AppendLine().AppendLine();
        }

        sb.AppendFormat("<b>üìà –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ {0} –≥–æ–¥</b>", financeInfo.Year).AppendLine().AppendLine();

        sb.AppendFormat("–î–æ—Ö–æ–¥—ã: {0:N0} ‚ÇΩ", financeInfo.Income).AppendLine();
        sb.AppendFormat(financeInfo.Profit > 0 ? "–ü—Ä–∏–±—ã–ª—å: {0:N0} ‚ÇΩ" : "‚ö†Ô∏è –£–±—ã—Ç–æ–∫: {0:N0} ‚ÇΩ", financeInfo.Profit).AppendLine();
        sb.AppendFormat("–î–µ–±–∏—Ç–æ—Ä—Å–∫–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å: {0:N0} ‚ÇΩ", financeInfo.AccountsReceivable).AppendLine();
        sb.AppendFormat("–ö–∞–ø–∏—Ç–∞–ª –∏ —Ä–µ–∑–µ—Ä–≤—ã: {0:N0} ‚ÇΩ", financeInfo.CapitalAndReserves).AppendLine();
        sb.AppendFormat("–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: {0:N0} ‚ÇΩ", financeInfo.LongTermLiabilities).AppendLine();
        sb.AppendFormat("–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: {0:N0} ‚ÇΩ", financeInfo.CurrentLiabilities).AppendLine();
        sb.AppendFormat("–ü–ª–∞—Ç–µ–∂–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç—Ä—É–¥–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤: {0:N0} ‚ÇΩ", financeInfo.PaidSalary).AppendLine();

        if (proceedingsInfo.Count > 0)
        {
            sb.AppendFormat("‚ö†Ô∏è –ï—Å—Ç—å –¥–æ–ª–≥ –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–µ –ø–µ—Ä–µ–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏: {0}", proceedingsInfo.Amount).AppendLine();
        }

        return sb;
    }
}