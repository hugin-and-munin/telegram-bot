using System.Globalization;
using System.Text;
using CredChecker;
using LegalEntityChecker;
using static ReportProvider.ReportProvider;

namespace TelegramBot;

public class CheckHandler(ReportProviderClient _reportProvider)
{
    public async Task<StringBuilder?> Handle(long tin, CancellationToken ct)
    {
        var request = new ReportProvider.ReportRequest() { Tin = tin };

        var report = await _reportProvider.GetAsync(request, cancellationToken: ct);

        if (report is null) return null;

        var sb = new StringBuilder();
        sb.AppendFormat("<b>{0}</b>", report.Name).AppendLine().AppendLine();

        // –°–µ—Ä–≤–∏—Å –¥–∞–Ω–Ω—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü
        sb.AppendFormat("<b>‚ÑπÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>").AppendLine().AppendLine();
        sb.AppendFormat("–ò–ù–ù: <code>{0}</code>", report.Tin).AppendLine();
        sb.AppendFormat("–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {0:yyyy-MM-dd}", DateTimeOffset.FromUnixTimeSeconds(report.IncorporationDate)).AppendLine();
        sb.AppendFormat(CultureInfo.GetCultureInfo("ru-RU"), "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: {0:N0} ‚ÇΩ", report.AuthorizedCapital).AppendLine();
        if (report.EmployeesNumber > 0)
        {
            sb.AppendFormat(CultureInfo.GetCultureInfo("ru-RU"), "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {0:N0}", report.EmployeesNumber).AppendLine();
        }
        else
        {
            sb.AppendLine("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
        }
        sb.AppendFormat("–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: <a href=\"https://yandex.com/maps?text={0}\">{1}</a>", report.Address.Replace(' ', '.'), report.Address).AppendLine();
        sb.AppendFormat("–°—Ç–∞—Ç—É—Å –∫–æ–º–ø–∞–Ω–∏–∏: {0}", report.LegalEntityStatus switch
        {
            LegalEntityStatus.Active => "–î–µ–π—Å—Ç–≤—É—é—â–∞—è",
            LegalEntityStatus.Bankruptcy => "‚ùó–í –ø—Ä–æ—Ü–µ—Å—Å–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞",
            LegalEntityStatus.InReorganizationProcess => "‚ùî–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
            LegalEntityStatus.InTerminationProcess => "‚ùó–í –ø—Ä–æ—Ü–µ—Å—Å–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏",
            LegalEntityStatus.Terminated => "‚ùó–õ–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞",
            _ => throw new NotSupportedException($"{report.LegalEntityStatus} not supported"),
        }).AppendLine();

        // –°–µ—Ä–≤–∏—Å –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏
        sb.AppendFormat("–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –ú–∏–Ω—Ü–∏—Ñ—Ä—ã: {0}", report.AccreditationState switch
        {
            CreditState.Unknown => "‚ùî–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
            CreditState.Credited => "‚úÖ –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∞",
            CreditState.NotCredited => "‚ùå –ù–µ—Ç –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏",
            _ => throw new NotSupportedException($"{report.AccreditationState} not supported"),
        }).AppendLine();

        // –°–µ—Ä–≤–∏—Å –æ—Ç–∑—ã–≤–æ–≤
        sb.AppendLine().AppendFormat("<b>üó£Ô∏è –û—Ç–∑—ã–≤—ã</b>").AppendLine().AppendLine();
        sb.AppendFormat("{0}", "TODO").AppendLine();

        // –°–µ—Ä–≤–∏—Å –∑–∞—Ä–ø–ª–∞—Ç
        sb.AppendLine().AppendFormat("<b>üí≤ –ó–∞—Ä–ø–ª–∞—Ç–∞</b>").AppendLine().AppendLine();
        sb.AppendFormat("{0}", "TODO").AppendLine();

        return sb;
    }
}
