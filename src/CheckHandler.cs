using System.Globalization;
using System.Text;
using CredChecker;
using LegalEntityChecker;
using static ReportProvider.ReportProvider;

namespace TelegramBot;

public class CheckHandler(ReportProviderClient _reportProvider)
{
    public async Task<StringBuilder?> Handle(long tin, CancellationToken ct)
    {
        var request = new ReportProvider.ReportRequest() { Tin = tin };

        var report = await _reportProvider.GetAsync(request, cancellationToken: ct);

        if (report is null) return null;

        var sb = new StringBuilder();
        sb.AppendFormat("<b>{0}</b>", report.Name).AppendLine().AppendLine();

        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        sb.AppendFormat("<b>‚ÑπÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>").AppendLine().AppendLine();
        sb.AppendFormat("–ò–ù–ù: <code>{0}</code>", report.Tin).AppendLine();
        sb.AppendFormat("–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {0:yyyy-MM-dd}", DateTimeOffset.FromUnixTimeSeconds(report.IncorporationDate)).AppendLine();
        sb.AppendFormat(CultureInfo.GetCultureInfo("ru-RU"), "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: {0:N0} ‚ÇΩ", report.AuthorizedCapital).AppendLine();
        
        if (report.EmployeesNumber > 0)
        {
            sb.AppendFormat(CultureInfo.GetCultureInfo("ru-RU"), "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {0:N0}", report.EmployeesNumber).AppendLine();
        }
        else
        {
            sb.AppendLine("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
        }
        
        sb.AppendFormat("üìç <a href=\"https://yandex.com/maps?text={0}\">{1}</a>", report.Address.Replace(' ', '.'), report.Address).AppendLine();
        
        if (report.AccreditationState == CreditState.Credited)
        {
            sb.AppendLine("‚úÖ –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –ú–∏–Ω—Ü–∏—Ñ—Ä—ã");
        }

        // –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è
        if (report.LegalEntityStatus != LegalEntityStatus.Active ||
            report.AccreditationState != CreditState.Credited ||
            report.SalaryDelays)
        {
            sb.AppendLine().AppendFormat("<b>‚ö†Ô∏è –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è</b>").AppendLine().AppendLine();

            if (report.AccreditationState != CreditState.Credited)
            {
                sb.AppendLine("‚ùóÔ∏è–ù–µ—Ç –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –ú–∏–Ω—Ü–∏—Ñ—Ä—ã");
            }

            if (report.LegalEntityStatus == LegalEntityStatus.Bankruptcy)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞");
            }
            else if (report.LegalEntityStatus == LegalEntityStatus.InReorganizationProcess)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏");
            }
            else if (report.LegalEntityStatus == LegalEntityStatus.InTerminationProcess)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏");
            }
            else if (report.LegalEntityStatus == LegalEntityStatus.Terminated)
            {
                sb.AppendLine("‚ùóÔ∏è–ö–æ–º–ø–∞–Ω–∏—è –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞");
            }

            if (report.SalaryDelays) sb.AppendLine("‚ùóÔ∏è–ó–∞–¥–µ—Ä–∂–∏–≤–∞—é—Ç –∑–∞—Ä–ø–ª–∞—Ç—É");
        }

        // –û—Ç–∑—ã–≤—ã
        sb.AppendLine().AppendFormat("<b>üó£Ô∏è –û—Ç–∑—ã–≤—ã</b>").AppendLine().AppendLine();
        sb.AppendFormat("{0}", "TODO").AppendLine();

        // –ó–∞—Ä–ø–ª–∞—Ç—ã
        sb.AppendLine().AppendFormat("<b>üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞</b>").AppendLine().AppendLine();
        sb.AppendFormat("{0}", "TODO").AppendLine();

        return sb;
    }
}
